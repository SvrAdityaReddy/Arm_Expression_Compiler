
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left><leftLSRSleft+-left*/%NAME NUMBER LS RS IF THEN ELSEstatement : NAME "=" expressionstatement : expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression \'%\' expression\n                  | expression LS expression\n                  | expression RS expression\n                  | expression \'<\' expression\n \t\t  | expression \'>\' expressionstatement : expression \'?\' statement \':\' statement\n                 | IF expression THEN statement ELSE statementexpression : \'(\' expression \')\'expression : NUMBERexpression : NAME'
    
_lr_action_items = {'THEN':([2,8,20,22,23,24,25,26,27,28,29,30,32,],[-15,-16,33,-14,-7,-9,-3,-5,-4,-6,-8,-10,-11,]),')':([2,8,9,22,23,24,25,26,27,28,29,30,32,],[-15,-16,22,-14,-7,-9,-3,-5,-4,-6,-8,-10,-11,]),'%':([1,2,5,8,9,20,21,22,23,24,25,26,27,28,29,30,32,],[-16,-15,10,-16,10,10,10,-14,-7,10,10,-5,10,-6,10,10,10,]),'NAME':([0,4,6,7,10,11,12,13,14,15,16,17,18,19,33,34,37,],[1,8,8,8,8,8,8,8,8,8,8,8,1,8,1,1,1,]),'RS':([1,2,5,8,9,20,21,22,23,24,25,26,27,28,29,30,32,],[-16,-15,11,-16,11,11,11,-14,-7,-9,-3,-5,-4,-6,-8,11,11,]),'<':([1,2,5,8,9,20,21,22,23,24,25,26,27,28,29,30,32,],[-16,-15,17,-16,17,17,17,-14,-7,-9,-3,-5,-4,-6,-8,-10,-11,]),'(':([0,4,6,7,10,11,12,13,14,15,16,17,18,19,33,34,37,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'+':([1,2,5,8,9,20,21,22,23,24,25,26,27,28,29,30,32,],[-16,-15,12,-16,12,12,12,-14,-7,12,-3,-5,-4,-6,12,12,12,]),'*':([1,2,5,8,9,20,21,22,23,24,25,26,27,28,29,30,32,],[-16,-15,13,-16,13,13,13,-14,-7,13,13,-5,13,-6,13,13,13,]),'-':([1,2,5,8,9,20,21,22,23,24,25,26,27,28,29,30,32,],[-16,-15,14,-16,14,14,14,-14,-7,14,-3,-5,-4,-6,14,14,14,]),'NUMBER':([0,4,6,7,10,11,12,13,14,15,16,17,18,19,33,34,37,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'/':([1,2,5,8,9,20,21,22,23,24,25,26,27,28,29,30,32,],[-16,-15,15,-16,15,15,15,-14,-7,15,15,-5,15,-6,15,15,15,]),'ELSE':([1,2,5,8,21,22,23,24,25,26,27,28,29,30,32,35,36,38,],[-16,-15,-2,-16,-1,-14,-7,-9,-3,-5,-4,-6,-8,-10,-11,37,-12,-13,]),'>':([1,2,5,8,9,20,21,22,23,24,25,26,27,28,29,30,32,],[-16,-15,19,-16,19,19,19,-14,-7,-9,-3,-5,-4,-6,-8,-10,-11,]),'LS':([1,2,5,8,9,20,21,22,23,24,25,26,27,28,29,30,32,],[-16,-15,16,-16,16,16,16,-14,-7,-9,-3,-5,-4,-6,-8,16,16,]),':':([1,2,5,8,21,22,23,24,25,26,27,28,29,30,31,32,36,38,],[-16,-15,-2,-16,-1,-14,-7,-9,-3,-5,-4,-6,-8,-10,34,-11,-12,-13,]),'=':([1,],[7,]),'$end':([1,2,3,5,8,21,22,23,24,25,26,27,28,29,30,32,36,38,],[-16,-15,0,-2,-16,-1,-14,-7,-9,-3,-5,-4,-6,-8,-10,-11,-12,-13,]),'?':([1,2,5,8,22,23,24,25,26,27,28,29,30,32,],[-16,-15,18,-16,-14,-7,-9,-3,-5,-4,-6,-8,-10,-11,]),'IF':([0,18,33,34,37,],[6,6,6,6,6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,4,6,7,10,11,12,13,14,15,16,17,18,19,33,34,37,],[5,9,20,21,23,24,25,26,27,28,29,30,5,32,5,5,5,]),'statement':([0,18,33,34,37,],[3,31,35,36,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','arm_expression_compiler_nobat.py',115),
  ('statement -> expression','statement',1,'p_statement_expr','arm_expression_compiler_nobat.py',280),
  ('expression -> expression + expression','expression',3,'p_expression_binop','arm_expression_compiler_nobat.py',283),
  ('expression -> expression - expression','expression',3,'p_expression_binop','arm_expression_compiler_nobat.py',284),
  ('expression -> expression * expression','expression',3,'p_expression_binop','arm_expression_compiler_nobat.py',285),
  ('expression -> expression / expression','expression',3,'p_expression_binop','arm_expression_compiler_nobat.py',286),
  ('expression -> expression % expression','expression',3,'p_expression_binop','arm_expression_compiler_nobat.py',287),
  ('expression -> expression LS expression','expression',3,'p_expression_binop','arm_expression_compiler_nobat.py',288),
  ('expression -> expression RS expression','expression',3,'p_expression_binop','arm_expression_compiler_nobat.py',289),
  ('expression -> expression < expression','expression',3,'p_expression_binop','arm_expression_compiler_nobat.py',290),
  ('expression -> expression > expression','expression',3,'p_expression_binop','arm_expression_compiler_nobat.py',291),
  ('statement -> expression ? statement : statement','statement',5,'p_expression_ternop','arm_expression_compiler_nobat.py',421),
  ('statement -> IF expression THEN statement ELSE statement','statement',6,'p_expression_ternop','arm_expression_compiler_nobat.py',422),
  ('expression -> ( expression )','expression',3,'p_expression_group','arm_expression_compiler_nobat.py',425),
  ('expression -> NUMBER','expression',1,'p_expression_number','arm_expression_compiler_nobat.py',432),
  ('expression -> NAME','expression',1,'p_expression_name','arm_expression_compiler_nobat.py',438),
]
