
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left><leftLSRSleft+-left*/%ELSE IF LS NAME NUMBER RS THENstatement : NAME "=" expressionstatement : expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression \'%\' expression\n                  | expression LS expression\n                  | expression RS expression\n                  | expression \'<\' expression\n \t\t  | expression \'>\' expressionstatement : expression \'?\' statement \':\' statement\n                 | IF expression THEN statement ELSE statementexpression : \'(\' expression \')\'expression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,32,34,37,],[2,19,19,19,2,19,19,19,19,19,19,19,19,19,2,2,2,]),'IF':([0,8,32,34,37,],[4,4,4,4,4,]),'(':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,32,34,37,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,32,34,37,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'$end':([1,2,3,6,19,21,23,24,25,26,27,28,29,30,31,33,36,38,],[0,-16,-2,-15,-16,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-12,-13,]),'=':([2,],[7,]),'?':([2,3,6,19,23,24,25,26,27,28,29,30,31,33,],[-16,8,-15,-16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,]),'+':([2,3,6,18,19,20,21,23,24,25,26,27,28,29,30,31,33,],[-16,9,-15,9,-16,9,9,-3,-4,-5,-6,-7,9,9,9,9,-14,]),'-':([2,3,6,18,19,20,21,23,24,25,26,27,28,29,30,31,33,],[-16,10,-15,10,-16,10,10,-3,-4,-5,-6,-7,10,10,10,10,-14,]),'*':([2,3,6,18,19,20,21,23,24,25,26,27,28,29,30,31,33,],[-16,11,-15,11,-16,11,11,11,11,-5,-6,-7,11,11,11,11,-14,]),'/':([2,3,6,18,19,20,21,23,24,25,26,27,28,29,30,31,33,],[-16,12,-15,12,-16,12,12,12,12,-5,-6,-7,12,12,12,12,-14,]),'%':([2,3,6,18,19,20,21,23,24,25,26,27,28,29,30,31,33,],[-16,13,-15,13,-16,13,13,13,13,-5,-6,-7,13,13,13,13,-14,]),'LS':([2,3,6,18,19,20,21,23,24,25,26,27,28,29,30,31,33,],[-16,14,-15,14,-16,14,14,-3,-4,-5,-6,-7,-8,-9,14,14,-14,]),'RS':([2,3,6,18,19,20,21,23,24,25,26,27,28,29,30,31,33,],[-16,15,-15,15,-16,15,15,-3,-4,-5,-6,-7,-8,-9,15,15,-14,]),'<':([2,3,6,18,19,20,21,23,24,25,26,27,28,29,30,31,33,],[-16,16,-15,16,-16,16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,]),'>':([2,3,6,18,19,20,21,23,24,25,26,27,28,29,30,31,33,],[-16,17,-15,17,-16,17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,]),':':([2,3,6,19,21,22,23,24,25,26,27,28,29,30,31,33,36,38,],[-16,-2,-15,-16,-1,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-12,-13,]),'ELSE':([2,3,6,19,21,23,24,25,26,27,28,29,30,31,33,35,36,38,],[-16,-2,-15,-16,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,37,-12,-13,]),'THEN':([6,18,19,23,24,25,26,27,28,29,30,31,33,],[-15,32,-16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,]),')':([6,19,20,23,24,25,26,27,28,29,30,31,33,],[-15,-16,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,8,32,34,37,],[1,22,35,36,38,]),'expression':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,32,34,37,],[3,18,20,21,3,23,24,25,26,27,28,29,30,31,3,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','__main__.py',115),
  ('statement -> expression','statement',1,'p_statement_expr','__main__.py',280),
  ('expression -> expression + expression','expression',3,'p_expression_binop','__main__.py',283),
  ('expression -> expression - expression','expression',3,'p_expression_binop','__main__.py',284),
  ('expression -> expression * expression','expression',3,'p_expression_binop','__main__.py',285),
  ('expression -> expression / expression','expression',3,'p_expression_binop','__main__.py',286),
  ('expression -> expression % expression','expression',3,'p_expression_binop','__main__.py',287),
  ('expression -> expression LS expression','expression',3,'p_expression_binop','__main__.py',288),
  ('expression -> expression RS expression','expression',3,'p_expression_binop','__main__.py',289),
  ('expression -> expression < expression','expression',3,'p_expression_binop','__main__.py',290),
  ('expression -> expression > expression','expression',3,'p_expression_binop','__main__.py',291),
  ('statement -> expression ? statement : statement','statement',5,'p_expression_ternop','__main__.py',421),
  ('statement -> IF expression THEN statement ELSE statement','statement',6,'p_expression_ternop','__main__.py',422),
  ('expression -> ( expression )','expression',3,'p_expression_group','__main__.py',425),
  ('expression -> NUMBER','expression',1,'p_expression_number','__main__.py',432),
  ('expression -> NAME','expression',1,'p_expression_name','__main__.py',438),
]
